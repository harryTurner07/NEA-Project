# Enemy movement, selects a random number and depending on the range that the number
        # goes into, for a range of 10 (not too sure how it works, but it does)
        # then it increases / decreases the x or y axis by the enemy's velocity
        """
        rand_num = random.randint(1,20)
        if 1 <= rand_num <= 5:
            for i in range(5):
                enemy_x += enemy_vel
                enemy_y -= enemy_vel
        if 6 <= rand_num <= 10:
            for i in range(5):
                enemy_y -= enemy_vel
                enemy_x -= enemy_vel
        if 11 <= rand_num <= 15:
            for i in range(5):
                enemy_x -= enemy_vel
                enemy_y += enemy_vel
        if 16 <= rand_num <= 20:
            for i in range(5):
                enemy_y += enemy_vel
                enemy_x += enemy_vel
        """

# Code for moving the enemey around, I think it works but the only thing it does is just mirror the movements

        """
        # If and while the enemy_x value is lower than the player_x value, increase it
        if enemy_x < player_x2:
            while enemy_x < player_x2:
                enemy_x += enemy_vel
                SCREEN.blit(enemy, (enemy_x, enemy_y))
        
        if enemy_y < player_y2:
            while enemy_y < player_y2:
                enemy_y += enemy_vel
                SCREEN.blit(enemy, (enemy_x, enemy_y))
        
        if enemy_x > player_x2:
            while enemy_x > player_x2:
                enemy_x -= enemy_vel
                SCREEN.blit(enemy, (enemy_x, enemy_y))

        if enemy_y > player_y2:
            while enemy_y > player_y2:
                enemy_y -= enemy_vel
                SCREEN.blit(enemy, (enemy_x, enemy_y))
        """

        """
        # Borders but for the enemy class(s)
        # X coordinates
        if enemy_x < 1:
            enemy_x = 10
        if enemy_x > (WIDTH - 1):
            enemy_x = (WIDTH - 9)
        # Y coordinates
        if enemy_y < 1:
            enemy_y = 10
        if enemy_y > (HEIGHT - 1):
            enemy_y = (HEIGHT - 9)
        """


Movement copy
# Doing the key things
        # Stores the keys pressed
        keys = pygame.key.get_pressed()
        # This was taken from game.py - Don't think the code was taken from anywhere
        # !!! The "and" sections were taken from GeeksForGeeks, see the write-up
        # if a (left) key is pressed 
        if keys[pygame.K_a]: #and player_x> 0: 
            # decrement in x co-ordinate 
            player_x -= player_vel
        # if d (right) key is pressed 
        if keys[pygame.K_d]: #and player_x < WIDTH - 64: 
            # increment in x co-ordinate 
            player_x += player_vel
        # if w (up) key is pressed    
        if keys[pygame.K_w]: #and player_y> 0: 
            # decrement in y co-ordinate 
            player_y -= player_vel
        # if s (down) key is pressed    
        if keys[pygame.K_s]: #and player_y < HEIGHT - 64: 
            # increment in y co-ordinate 
            player_y += player_vel
        # Quit Key  
        q_key = pygame.key.get_pressed()
        if q_key[pygame.K_q]:
            running = False